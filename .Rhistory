library(bartMachine)
install.packages("bartMachine")
library(bartMachine)
q()
set.seed(11)
n = 200
p = 5
X = data.frame(matrix(runif(n * p), ncol = p))
y = 10 * sin(pi* X[ ,1] * X[,2]) +20 * (X[,3] -.5)^2 + 10 * X[ ,4] + 5 * X[,5] + rnorm(n)
bart_machine = bartMachine(X, y)
summary(bart_machine)
bart_machine = bartMachine(X, y)
library(bartMachie)
library(bartMachine)
bart_machine = bartMachine(X, y)
summary(bart_machine)
q()
library(causaldrf)
example_data <- sim_data
hi_list <- hi_est(Y = Y,
treat = T,
treat_formula = T ~ B.1 + B.2 + B.3 + B.4 + B.5 + B.6 + B.7 + B.8,
outcome_formula = Y ~ T + I(T^2) + gps + I(gps^2) + T * gps,
data = example_data,
grid_val = seq(8, 16, by = 1),
treat_mod = "Normal")
sample_index <- sample(1:1000, 100)
plot(example_data$T[sample_index],
example_data$Y[sample_index],
xlab = "T",
ylab = "Y",
main = "hi estimate")
q()
# install.packages("devtools")
devtools::install_github("bvegetabile/entbal")
library(entbal)
library(survey, quietly = T, warn.conflicts = F, verbose = F)
dset <- dw99cps1
eb_pars <- list(exp_type = 'binary',
                estimand = 'ATT',
                n_moments = 3, 
                optim_method = 'L-BFGS-B',
                verbose = T,
                opt_constraints = c(-250,250),
                bal_tol = 1e-8,
                max_iters = 1000,
                which_z = 1)
estwts <- entbal(TA ~ age + education + black + hispanic + married + nodegree + RE74 + RE75,
                 data = dset,
                 eb_pars = eb_pars)
summary(estwts)
plot(estwts, which_vars = c(1,2,7,8))
install.packages('CBPS')
library(CBPS)
set.seed(123456)
n <- 1000
X <- mvrnorm(n, mu = rep(0,2), Sigma = diag(2))
beta <- rnorm(ncol(X)+1, sd = 1)
treat <- cbind(1,X)%*%beta + rnorm(n, sd = 5)
treat.effect <- 1
effect.beta <- rnorm(ncol(X))
y <- rbinom(n, 1, (1 + exp(-treat.effect*treat -
X%*%effect.beta))^-1)
fit2 <- CBPS(treat ~ X)
summary(fit2)
summary(glm(y ~ treat + X, weights = fit2$weights,
family = "quasibinomial"))
/Applications/ML/anaconda3/envs/r4/bin/python /Users/zmin/Desktop/Myjob/survey-outline/CausalCT/CausalCT/examples/GPS_example.py
q()
library(cbps)
library(CBPS)
q()
install.package('entbal')
install.packages('entbal')
devtools::install_github("bvegetabile/entbal")
library(entbal)
q()
library(entbal)
q()
.libPaths()
/Applications/ML/anaconda3/envs/r4/bin/python /Users/zmin/Desktop/Myjob/survey-outline/CausalCT/CausalCT/examples/EB_example.py
q()
set.seed(2019)
library(entbal)
library(survey)
n_obs <- 2500
n_sims <- 500
ebp <- list(exp_type = 'binary',
            estimand = 'ATE',
            n_moments = 3, 
            optim_method = 'L-BFGS-B',
            verbose = F,
            opt_constraints = c(-250,250),
            bal_tol = 1e-8,
            max_iters = 1000)
ebp$weights
ebp$wts
 wts <- entbal(TA ~ X1 + X2 + X3 ,
                data = dset,
                eb_pars = ebp)
outro <- matrix(NA, nrow = n_sims, ncol = 4)
start_time <- Sys.time()
for(i in 1:n_sims){
  
  X1 <- rnorm(n_obs)
  X2 <- rnorm(n_obs)
  X3 <- rnorm(n_obs)
  
  ps <- plogis(1.5 + 1.2 * X1 - 1.5 * X2 + 0.5 * X3)
  
  TA <- rbinom(n_obs, 1, ps)
  
  Y1 <- X1^2 + X2^2 + X3^2 + 10 + rnorm(n_obs)
  Y0 <- -(X1 + X2 + X3) + rnorm(n_obs)
  
  Yobs <- TA * Y1 + (1 - TA) * Y0
  
  dset <- data.frame('X1' = X1,
                     'X2' = X2,
                     'X3' = X3,
                     'TA' = TA,
                     'Y' = Yobs)
  
  SATE <- mean(Y1-Y0)
  wts <- entbal(TA ~ X1 + X2 + X3 ,
                data = dset,
                eb_pars = ebp)
qq
q()
q()
install.packages("independenceWeights")
library(independenceWeights)
q()
library('independenceWeights')
q()
library(locfit)
q()
help()
 which R
q()
q()
library('grf')
install.packages('grf')
library(grf)
q()
